name: Build and Deploy Java Maven App

on:
  workflow_dispatch: # Trigger manually or via events

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Java 17 environment
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: "temurin"
        java-package: jdk
        check-latest: false
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN
        overwrite-settings: true
        job-status: success
        token: ${{ secrets.GITHUB_TOKEN }}

    # Step 3: Build the project using Maven
    - name: Build with Maven
      working-directory: ./spring-boot-server
      run: mvn clean package -DskipTests

    # Step 4: Upload the built artifact
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: ./spring-boot-server/target/*.jar

    # Step 5: Deploy to Render
    - name: Deploy to Render
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        # Install Render CLI
        curl -fsSL https://cli.render.com/install.sh | bash

        # Log in to Render CLI
        render login --api-key "$RENDER_API_KEY"

        # Update the service to use the new artifact
        render deploy "$RENDER_SERVICE_ID" \
          --artifact target/*.jar \
          --env DATABASE_URL="$DATABASE_URL"
